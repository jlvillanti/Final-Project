# -*- coding: utf-8 -*-
"""FinalProject

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15tOHYnRWibty-czJjvvLXNDRvPcPnNOP
"""

import streamlit as st
import pickle
import pandas as pd

# Load the trained regression model
with open("random_forest_salary_model.pkl", "rb") as f:
    model = pickle.load(f)

# Define mappings for education and coding experience
education_mapping = {
    "Some college": 0,
    "Bachelor’s degree": 1,
    "Master’s degree": 2,
    "Doctoral degree": 3,
    "No formal education": 4
}

coding_experience_mapping = {
    "<1 years": 0,
    "1-3 years": 1,
    "3-5 years": 2,
    "5-10 years": 3,
    "10-20 years": 4,
    "20+ years": 5
}

# Streamlit App
st.title("💼 Salary Predictor (Kaggle Survey 2022)")
st.subheader(":bar_chart: Predict your salary based on your profile")

# User Inputs
education = st.selectbox("Education Level", list(education_mapping.keys()))
years_coding = st.selectbox("Years of Coding Experience", list(coding_experience_mapping.keys()))
country = st.selectbox("Country", ["United States", "India", "Germany", "France", "Australia", "Other"])
codes_python = st.checkbox("Codes in Python")
codes_sql = st.checkbox("Codes in SQL")
codes_java = st.checkbox("Codes in Java")
codes_r = st.checkbox("Codes in R")

# Map inputs
education_num = education_mapping[education]
years_coding_num = coding_experience_mapping[years_coding]

# Prepare features
features = {
    "Education": education_num,
    "Years_Coding": years_coding_num,
    "Codes_In_Python": int(codes_python),
    "Codes_In_SQL": int(codes_sql),
    "Codes_In_Java": int(codes_java),
    "Codes_In_R": int(codes_r),
    # One-hot for country (reference: Other)
    "Country_United_States": 0,
    "Country_India": 0,
    "Country_Germany": 0,
    "Country_France": 0,
    "Country_Australia": 0
}

if country != "Other":
    features[f"Country_{country.replace(' ', '_')}"] = 1

# DataFrame for prediction
input_data = pd.DataFrame([features])

# Prediction Section
st.markdown("### 📊 Salary Prediction")
st.write("Click below to estimate your salary:")

if st.button("💵 Predict Salary"):
    prediction = model.predict(input_data)[0]
    st.success(f"💰 Estimated Salary Range: **${prediction:,.2f}**")

st.markdown("---")
st.markdown("<small>📘 Built with ❤️ by Hannah Bottomley, Emma Mori, and Jillian Villanti>", unsafe_allow_html=True)

